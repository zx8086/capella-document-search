name: Docker CI/CD with Bun and Snyk

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

permissions:
  contents: read
  security-events: write

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          version: latest
          driver-opts: |
            image=moby/buildkit:latest
          platforms: linux/amd64,linux/arm64

      - name: Setup environment files
        env:
          ENV_PRODUCTION: ${{ secrets.ENV_PRODUCTION }}
        run: |
          echo "$ENV_PRODUCTION" > .env.production
          cp .env.production .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set build timestamp
        id: timestamp
        run: echo "BUILD_TIMESTAMP=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            NODE_ENV=production
            BUILD_VERSION=${{ github.ref_name || '0.0.1' }}
            COMMIT_HASH=${{ github.sha }}
            BUILD_DATE=${{ env.BUILD_TIMESTAMP }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            zx8086/capella-document-search:latest
            zx8086/capella-document-search:${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          provenance: false

      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: zx8086/capella-document-search:latest
          args: --file=Dockerfile --severity-threshold=high

      - name: Test container
        if: github.event_name != 'pull_request'
        run: |
          # Stop existing containers using port 3000
          docker ps -q --filter publish=3000 | xargs -r docker stop
          
          # Remove existing container with same name if exists
          docker rm -f capella-search-test 2>/dev/null || true
          
          # Run new container with specific name and environment variables
          docker run -d \
            --name capella-search-test \
            -p 3000:3000 \
            -e NODE_ENV=production \
            -e BUILD_VERSION=${{ github.ref_name || '0.0.1' }} \
            -e COMMIT_HASH=${{ github.sha }} \
            -e BUILD_DATE=${{ env.BUILD_TIMESTAMP }} \
            zx8086/capella-document-search:latest
          
          # Wait for container to be healthy (optional)
          sleep 10
          
          # Verify container is running
          docker ps | grep capella-search-test || (docker logs capella-search-test && exit 1)

      - name: Cleanup
        if: always()
        run: |
          rm -f .env .env.production
          docker image prune -f
          docker volume prune -f
          echo "Cleanup completed"
