name: Docker CI/CD with Bun

on:
  push:
    branches: ["master"]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        env:
          DB_DATA_DIR: /app/data
          ENABLE_OPENTELEMETRY: true
          ENABLE_FILE_LOGGING: true
          LOG_LEVEL: debug
          LOG_MAX_SIZE: 20m
          LOG_MAX_FILES: 14d
          GRAPHQL_ENDPOINT: http://host.docker.internal:4000/graphql
          API_BASE_URL: https://cloudapi.cloud.couchbase.com/v4
          ORG_ID: ${{ secrets.ORG_ID }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          CLUSTER_ID: ${{ secrets.CLUSTER_ID }}
          BUCKET_ID: ${{ secrets.BUCKET_ID }}
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
          SERVICE_NAME: Capella Document Search
          SERVICE_VERSION: 2.0.0
          DEPLOYMENT_ENVIRONMENT: production
          TRACES_ENDPOINT: https://otel-http-traces.siobytes.com
          METRICS_ENDPOINT: https://otel-http-metrics.siobytes.com
          LOGS_ENDPOINT: https://otel-http-logs.siobytes.com
          METRIC_READER_INTERVAL: 1800000
          VITE_OPENREPLAY_PROJECT_KEY: ${{ secrets.VITE_OPENREPLAY_PROJECT_KEY }}
          VITE_OPENREPLAY_INGEST_POINT: https://api.openreplay.com/ingest
          VITE_FILE_UPLOAD_LIMIT: 50
          VITE_ELASTIC_APM_SERVICE_NAME: Capella Document Search
          VITE_ELASTIC_APM_SERVER_URL: https://apm.siobytes.com
          VITE_ELASTIC_APM_SERVICE_VERSION: 2.0.0
          VITE_ELASTIC_APM_ENVIRONMENT: production
          VITE_ELASTIC_APM_DISTRIBUTED_TRACING_ORIGINS: "['*']"
          HEALTH_CHECK_PORT: 3000
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: zx8086/capella-document-search:latest
          build-args: |
            DB_DATA_DIR
            ENABLE_OPENTELEMETRY
            ENABLE_FILE_LOGGING
            LOG_LEVEL
            LOG_MAX_SIZE
            LOG_MAX_FILES
            GRAPHQL_ENDPOINT
            API_BASE_URL
            ORG_ID
            PROJECT_ID
            CLUSTER_ID
            BUCKET_ID
            AUTH_TOKEN
            SERVICE_NAME
            SERVICE_VERSION
            DEPLOYMENT_ENVIRONMENT
            TRACES_ENDPOINT
            METRICS_ENDPOINT
            LOGS_ENDPOINT
            METRIC_READER_INTERVAL
            VITE_OPENREPLAY_PROJECT_KEY
            VITE_OPENREPLAY_INGEST_POINT
            VITE_FILE_UPLOAD_LIMIT
            VITE_ELASTIC_APM_SERVICE_NAME
            VITE_ELASTIC_APM_SERVER_URL
            VITE_ELASTIC_APM_SERVICE_VERSION
            VITE_ELASTIC_APM_ENVIRONMENT
            VITE_ELASTIC_APM_DISTRIBUTED_TRACING_ORIGINS
            HEALTH_CHECK_PORT

      - name: Deploy container
        run: |
          docker stop capella-document-search || true
          docker rm capella-document-search || true
          docker run -d --name capella-document-search \
            -p 3000:3000 \
            -e DB_DATA_DIR=/app/data \
            -e ENABLE_OPENTELEMETRY=true \
            -e ENABLE_FILE_LOGGING=true \
            -e LOG_LEVEL='debug' \
            -e LOG_MAX_SIZE='20m' \
            -e LOG_MAX_FILES='14d' \
            -e GRAPHQL_ENDPOINT=http://host.docker.internal:4000/graphql \
            -e API_BASE_URL='https://cloudapi.cloud.couchbase.com/v4' \
            -e ORG_ID='${{ secrets.ORG_ID }}' \
            -e PROJECT_ID='${{ secrets.PROJECT_ID }}' \
            -e CLUSTER_ID='${{ secrets.CLUSTER_ID }}' \
            -e BUCKET_ID='${{ secrets.BUCKET_ID }}' \
            -e AUTH_TOKEN='${{ secrets.AUTH_TOKEN }}' \
            -e SERVICE_NAME='Capella Document Search' \
            -e SERVICE_VERSION='2.0.0' \
            -e DEPLOYMENT_ENVIRONMENT='production' \
            -e TRACES_ENDPOINT='https://otel-http-traces.siobytes.com' \
            -e METRICS_ENDPOINT='https://otel-http-metrics.siobytes.com' \
            -e LOGS_ENDPOINT='https://otel-http-logs.siobytes.com' \
            -e METRIC_READER_INTERVAL=1800000 \
            -e VITE_OPENREPLAY_PROJECT_KEY='${{ secrets.VITE_OPENREPLAY_PROJECT_KEY }}' \
            -e VITE_OPENREPLAY_INGEST_POINT='https://api.openreplay.com/ingest' \
            -e VITE_FILE_UPLOAD_LIMIT=50 \
            -e VITE_ELASTIC_APM_SERVICE_NAME='Capella Document Search' \
            -e VITE_ELASTIC_APM_SERVER_URL='https://apm.siobytes.com' \
            -e VITE_ELASTIC_APM_SERVICE_VERSION='2.0.0' \
            -e VITE_ELASTIC_APM_ENVIRONMENT='production' \
            -e VITE_ELASTIC_APM_DISTRIBUTED_TRACING_ORIGINS="['*']" \
            -e HEALTH_CHECK_PORT=3000 \
            zx8086/capella-document-search:latest
