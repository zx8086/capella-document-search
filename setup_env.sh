#!/bin/bash
# setup_env.sh

# Function to set environment variable
set_env() {
    if [ -n "$2" ]; then
        echo "$1=$2" >> $GITHUB_ENV
        echo "$1=$2" >> .env
    fi
}

# Create or clear the .env file
> .env

# Set environment variables
set_env ENABLE_FILE_LOGGING "${ENABLE_FILE_LOGGING}"
set_env LOG_LEVEL "${LOG_LEVEL}"
set_env LOG_MAX_SIZE "${LOG_MAX_SIZE}"
set_env LOG_MAX_FILES "${LOG_MAX_FILES}"
set_env GRAPHQL_ENDPOINT "${GRAPHQL_ENDPOINT}"
set_env DB_DATA_DIR "${DB_DATA_DIR}"
set_env PUBLIC_CSV_FILE_UPLOAD_LIMIT "${PUBLIC_CSV_FILE_UPLOAD_LIMIT}"
set_env API_BASE_URL "${API_BASE_URL}"
set_env ENABLE_OPENTELEMETRY "${ENABLE_OPENTELEMETRY}"
set_env SERVICE_NAME "${SERVICE_NAME}"
set_env SERVICE_VERSION "${SERVICE_VERSION}"
set_env DEPLOYMENT_ENVIRONMENT "${DEPLOYMENT_ENVIRONMENT}"
set_env TRACES_ENDPOINT "${TRACES_ENDPOINT}"
set_env METRICS_ENDPOINT "${METRICS_ENDPOINT}"
set_env LOGS_ENDPOINT "${LOGS_ENDPOINT}"
set_env METRIC_READER_INTERVAL "${METRIC_READER_INTERVAL}"
set_env CONSOLE_METRIC_READER_INTERVAL "${CONSOLE_METRIC_READER_INTERVAL}"
set_env PUBLIC_OPENREPLAY_INGEST_POINT "${PUBLIC_OPENREPLAY_INGEST_POINT}"
set_env PUBLIC_ELASTIC_APM_SERVICE_NAME "${PUBLIC_ELASTIC_APM_SERVICE_NAME}"
set_env PUBLIC_ELASTIC_APM_SERVER_URL "${PUBLIC_ELASTIC_APM_SERVER_URL}"
set_env PUBLIC_ELASTIC_APM_SERVICE_VERSION "${PUBLIC_ELASTIC_APM_SERVICE_VERSION}"
set_env PUBLIC_ELASTIC_APM_ENVIRONMENT "${PUBLIC_ELASTIC_APM_ENVIRONMENT}"

# Set secret environment variables
set_env ORG_ID "${ORG_ID}"
set_env PROJECT_ID "${PROJECT_ID}"
set_env CLUSTER_ID "${CLUSTER_ID}"
set_env BUCKET_ID "${BUCKET_ID}"
set_env AUTH_TOKEN "${AUTH_TOKEN}"
set_env PUBLIC_OPENREPLAY_PROJECT_KEY "${PUBLIC_OPENREPLAY_PROJECT_KEY}"

echo "Environment variables set and exported. .env file created."
